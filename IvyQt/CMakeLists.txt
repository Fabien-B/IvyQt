cmake_minimum_required(VERSION 3.14)

project(IvyQt LANGUAGES CXX)

include(GNUInstallDirs)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Core Network REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core Network REQUIRED)

add_library(IvyQt STATIC
  ivyqt.cpp
  ivyqt.h
  peer.cpp
  peer.h
)

set_target_properties(IvyQt PROPERTIES
    VERSION 0.0.1
)

target_link_libraries(IvyQt PRIVATE
    Qt${QT_VERSION_MAJOR}::Core
    Qt${QT_VERSION_MAJOR}::Network
)


target_compile_definitions(IvyQt PRIVATE IVYQT_LIBRARY)


install(TARGETS ${PROJECT_NAME}
        EXPORT ${PROJECT_NAME}Config 
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

install(FILES ivyqt.h peer.h DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/IvyQt")


export(TARGETS
        ${PROJECT_NAME}
        FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
)
install(EXPORT ${PROJECT_NAME}Config DESTINATION "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}/cmake")

